name: Terraform CI

on:
  push:
    branches: [main, master]
    paths:
      - "terraform/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main, master]
    paths:
      - "terraform/**"
      - ".github/workflows/**"
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  terraform:
    name: Terraform Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"
          terraform_wrapper: false

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Post Format Results
        if: always() && github.event_name == 'pull_request' && steps.fmt.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format Check Failed 🔴
            Please run \`terraform fmt -recursive\` to fix formatting issues.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  security-scan:
    name: Security Scan
    uses: ./.github/workflows/kics-scan.yml
    permissions:
      contents: read
      security-events: write
      pull-requests: write

  summary:
    name: CI Summary
    needs: [terraform, security-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Job Status
        uses: actions/github-script@v7
        with:
          script: |
            const terraform = '${{ needs.terraform.result }}'
            const security = '${{ needs.security-scan.result }}'

            const summary = `### CI Pipeline Summary

            #### Terraform Checks
            - Status: ${terraform === 'success' ? '✅' : '❌'}

            #### Security Scan
            - Status: ${security === 'success' ? '✅' : '❌'}

            ${terraform !== 'success' || security !== 'success' ? '⚠️ Some checks failed. Please review the logs for details.' : '✅ All checks passed successfully!'}

            > Note: Detailed security scan results are available in the "Security" tab.`

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            })
